#!/usr/bin/env node

'use strict'

const jsonFuture = require('json-future')
const got = require('got')

const DATASET_URL = 'https://rawgit.com/disconnectme/disconnect-tracking-protection/master/services.json'

const extractDomains = obj => Object.values(obj).reduce((domains, value)=> {
    if (Object.prototype.toString.call(value) === '[object Object]') {
      return [ ...domains, ...extractDomains(value)]
    }
    if(Array.isArray(value)) {
      return [...domains, ...value]
    }
    return domains
  }, [])

;(async () => {
  const { body } = await got(DATASET_URL)
  const { categories } = await jsonFuture.parseAsync(body)

  const domains = Object.values(categories).reduce((set, category) => {
    const domains = category.reduce(
      (domains, company) => [...domains, ...extractDomains(company)], []
    );
    return new Set([...set, ...domains])
  }, new Set())

  const sortedDomains = Array.from(domains).sort()
  await jsonFuture.saveAsync('domains.json', sortedDomains)
})()
